/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as InfoscreenIndexImport } from './routes/infoscreen/index'
import { Route as AuthLoginImport } from './routes/auth/Login'
import { Route as AuthAdminIndexImport } from './routes/auth/admin/index'
import { Route as AuthAdminCreateScreenImport } from './routes/auth/admin/createScreen'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const InfoscreenIndexRoute = InfoscreenIndexImport.update({
  id: '/infoscreen/',
  path: '/infoscreen/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/Login',
  path: '/auth/Login',
  getParentRoute: () => rootRoute,
} as any)

const AuthAdminIndexRoute = AuthAdminIndexImport.update({
  id: '/auth/admin/',
  path: '/auth/admin/',
  getParentRoute: () => rootRoute,
} as any)

const AuthAdminCreateScreenRoute = AuthAdminCreateScreenImport.update({
  id: '/auth/admin/createScreen',
  path: '/auth/admin/createScreen',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/Login': {
      id: '/auth/Login'
      path: '/auth/Login'
      fullPath: '/auth/Login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/infoscreen/': {
      id: '/infoscreen/'
      path: '/infoscreen'
      fullPath: '/infoscreen'
      preLoaderRoute: typeof InfoscreenIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/admin/createScreen': {
      id: '/auth/admin/createScreen'
      path: '/auth/admin/createScreen'
      fullPath: '/auth/admin/createScreen'
      preLoaderRoute: typeof AuthAdminCreateScreenImport
      parentRoute: typeof rootRoute
    }
    '/auth/admin/': {
      id: '/auth/admin/'
      path: '/auth/admin'
      fullPath: '/auth/admin'
      preLoaderRoute: typeof AuthAdminIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/Login': typeof AuthLoginRoute
  '/infoscreen': typeof InfoscreenIndexRoute
  '/auth/admin/createScreen': typeof AuthAdminCreateScreenRoute
  '/auth/admin': typeof AuthAdminIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/Login': typeof AuthLoginRoute
  '/infoscreen': typeof InfoscreenIndexRoute
  '/auth/admin/createScreen': typeof AuthAdminCreateScreenRoute
  '/auth/admin': typeof AuthAdminIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/Login': typeof AuthLoginRoute
  '/infoscreen/': typeof InfoscreenIndexRoute
  '/auth/admin/createScreen': typeof AuthAdminCreateScreenRoute
  '/auth/admin/': typeof AuthAdminIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/Login'
    | '/infoscreen'
    | '/auth/admin/createScreen'
    | '/auth/admin'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/Login'
    | '/infoscreen'
    | '/auth/admin/createScreen'
    | '/auth/admin'
  id:
    | '__root__'
    | '/'
    | '/auth/Login'
    | '/infoscreen/'
    | '/auth/admin/createScreen'
    | '/auth/admin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  InfoscreenIndexRoute: typeof InfoscreenIndexRoute
  AuthAdminCreateScreenRoute: typeof AuthAdminCreateScreenRoute
  AuthAdminIndexRoute: typeof AuthAdminIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  InfoscreenIndexRoute: InfoscreenIndexRoute,
  AuthAdminCreateScreenRoute: AuthAdminCreateScreenRoute,
  AuthAdminIndexRoute: AuthAdminIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/Login",
        "/infoscreen/",
        "/auth/admin/createScreen",
        "/auth/admin/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/Login": {
      "filePath": "auth/Login.tsx"
    },
    "/infoscreen/": {
      "filePath": "infoscreen/index.tsx"
    },
    "/auth/admin/createScreen": {
      "filePath": "auth/admin/createScreen.tsx"
    },
    "/auth/admin/": {
      "filePath": "auth/admin/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
